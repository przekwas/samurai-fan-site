{"version":3,"sources":["assets/music/samurai-black_dog.mp3","assets/music/samurai-chippin_in.mp3","assets/music/samurai-never_fade_away.mp3","assets/music/samurai-the_ballad_of_buck_ravers.mp3","contexts/MusicPlayerContext.tsx","components/App/styled.ts","assets/images/samurai-logo-transparent.png","components/Header/styled.ts","components/Header/index.tsx","utils/useMusicPlayer.ts","components/PlayerControls/styled.ts","components/PlayerControls/index.tsx","components/TrackList/styled.ts","components/TrackList/index.tsx","components/App/index.tsx","reportWebVitals.ts","index.tsx"],"names":["BlackDog","require","ChippinIn","NeverFadeAway","TheBalladOfBuckRavers","MusicPlayerContext","createContext","MusicPlayerProvider","children","useState","audioPlayer","Audio","isPlaying","currentTrackIndex","tracks","name","file","default","state","setState","Provider","value","RootLayout","styled","div","Logo","img","Greeting","p","Header","src","SamuraiLogo","alt","useMusicPlayer","useContext","playTrack","index","togglePlay","pause","play","playPrev","length","playNext","trackList","currentTrackName","PlayerControlsDiv","Marquee","MarqueeText","FlexedButtons","TrackButton","button","props","reverse","PlayerControls","onClick","TrackDiv","TrackName","TrackList","map","track","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1388ab8e.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/samurai-black_dog.71549499.mp3\";","export default __webpack_public_path__ + \"static/media/samurai-chippin_in.b20f0b22.mp3\";","export default __webpack_public_path__ + \"static/media/samurai-never_fade_away.d3b6d0d5.mp3\";","export default __webpack_public_path__ + \"static/media/samurai-the_ballad_of_buck_ravers.f9221cc9.mp3\";","import { useState, createContext } from 'react';\r\nconst BlackDog = require('../assets/music/samurai-black_dog.mp3');\r\nconst ChippinIn = require('../assets/music/samurai-chippin_in.mp3');\r\nconst NeverFadeAway = require('../assets/music/samurai-never_fade_away.mp3');\r\nconst TheBalladOfBuckRavers = require('../assets/music/samurai-the_ballad_of_buck_ravers.mp3');\r\n\r\nexport const MusicPlayerContext = createContext<any>([{}, () => {}]);\r\n\r\nexport interface MusicContextState {\r\n\taudioPlayer: HTMLAudioElement;\r\n\tisPlaying: boolean;\r\n\tcurrentTrackIndex: number;\r\n\ttracks: {\r\n\t\tname: string;\r\n\t\tfile: any;\r\n\t}[];\r\n}\r\n\r\nconst MusicPlayerProvider = ({ children }: MusicPlayerProviderProps) => {\r\n\tconst [state, setState] = useState<MusicContextState>({\r\n\t\taudioPlayer: new Audio(),\r\n\t\tisPlaying: false,\r\n\t\tcurrentTrackIndex: 0,\r\n\t\ttracks: [\r\n\t\t\t{\r\n\t\t\t\tname: 'Black Dog',\r\n\t\t\t\tfile: BlackDog.default\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tname: \"Chippin' in\",\r\n\t\t\t\tfile: ChippinIn.default\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tname: 'Never Fade Away',\r\n\t\t\t\tfile: NeverFadeAway.default\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tname: 'The Ballad of Buck Ravers',\r\n\t\t\t\tfile: TheBalladOfBuckRavers.default\r\n\t\t\t}\r\n\t\t]\r\n\t});\r\n\r\n\treturn (\r\n\t\t<MusicPlayerContext.Provider value={[state, setState]}>\r\n\t\t\t{children}\r\n\t\t</MusicPlayerContext.Provider>\r\n\t);\r\n};\r\n\r\ninterface MusicPlayerProviderProps {\r\n\tchildren: React.ReactNode;\r\n}\r\n\r\nexport default MusicPlayerProvider;\r\n","import styled from 'styled-components';\r\n\r\nexport const RootLayout = styled.div`\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\tjustify-content: start;\r\n\talign-items: center;\r\n\tmin-height: 100vh;\r\n\tcolor: gainsboro;\r\n\tpadding: 0rem 1rem;\r\n\r\n\tbackground: radial-gradient(circle, rgba(0, 0, 0, 1) 46%, rgba(170, 11, 11, 1) 100%);\r\n\tbackground-size: 150% 150%;\r\n\tanimation: gradient 15s ease infinite;\r\n\r\n\t@keyframes gradient {\r\n\t\t0% {\r\n\t\t\tbackground-position: 0% 50%;\r\n\t\t}\r\n\t\t50% {\r\n\t\t\tbackground-position: 100% 50%;\r\n\t\t}\r\n\t\t100% {\r\n\t\t\tbackground-position: 0% 50%;\r\n\t\t}\r\n\t}\r\n`;\r\n","export default __webpack_public_path__ + \"static/media/samurai-logo-transparent.37d58b79.png\";","import styled from 'styled-components';\r\n\r\nexport const Logo = styled.img`\r\n\tmax-width: 20rem;\r\n`;\r\n\r\nexport const Greeting = styled.p`\r\n\tmax-width: 25rem;\r\n\ttext-align: justify;\r\n`;","import SamuraiLogo from '../../assets/images/samurai-logo-transparent.png';\r\nimport { Logo, Greeting } from './styled';\r\n\r\nconst Header = () => {\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Logo src={SamuraiLogo} alt=\"samurai band logo\" />\r\n\t\t\t<h1>SAMURAI</h1>\r\n\t\t\t<Greeting>\r\n\t\t\t\tThe #1 fansite to the chrome-rock band SAMURAI. All other fuckin sites are nothin'\r\n\t\t\t\tbut posers. Don't be fooled chooms!\r\n\t\t\t</Greeting>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default Header;\r\n","import { useContext } from 'react';\r\nimport { MusicPlayerContext, MusicContextState } from '../contexts/MusicPlayerContext';\r\n\r\nexport const useMusicPlayer = () => {\r\n\tconst [state, setState] = useContext<\r\n\t\t[MusicContextState, React.Dispatch<React.SetStateAction<MusicContextState>>]\r\n\t>(MusicPlayerContext);\r\n\r\n\tfunction playTrack(index: number) {\r\n\t\tif (index === state.currentTrackIndex) {\r\n\t\t\ttogglePlay();\r\n\t\t} else {\r\n\t\t\tstate.audioPlayer.pause();\r\n\t\t\tstate.audioPlayer = new Audio(state.tracks[index].file);\r\n\t\t\tstate.audioPlayer.play();\r\n\t\t\t// state.audioPlayer.volume = 0.2;\r\n\t\t\tsetState(state => ({\r\n\t\t\t\t...state,\r\n\t\t\t\tcurrentTrackIndex: index,\r\n\t\t\t\tisPlaying: true\r\n\t\t\t}));\r\n\t\t}\r\n\t}\r\n\r\n\tfunction togglePlay() {\r\n\t\tif (state.isPlaying) {\r\n\t\t\tstate.audioPlayer.pause();\r\n\t\t} else {\r\n\t\t\tstate.audioPlayer.play();\r\n\t\t\t// state.audioPlayer.volume = 0.2;\r\n\t\t}\r\n\t\tsetState(state => ({\r\n\t\t\t...state,\r\n\t\t\tisPlaying: !state.isPlaying\r\n\t\t}));\r\n\t}\r\n\r\n\tfunction playPrev() {\r\n\t\tconst newIndex =\r\n\t\t\t(((state.currentTrackIndex - 1) % state.tracks.length) + state.tracks.length) %\r\n\t\t\tstate.tracks.length;\r\n\t\tplayTrack(newIndex);\r\n\t}\r\n\r\n\tfunction playNext() {\r\n\t\tconst newIndex = (state.currentTrackIndex + 1) % state.tracks.length;\r\n\t\tplayTrack(newIndex);\r\n\t}\r\n\r\n\treturn {\r\n\t\tplayTrack,\r\n\t\ttogglePlay,\r\n\t\tplayPrev,\r\n\t\tplayNext,\r\n\t\ttrackList: state.tracks,\r\n\t\tisPlaying: state.isPlaying,\r\n\t\tcurrentTrackName: state.tracks[state.currentTrackIndex].name\r\n\t};\r\n};\r\n","import styled from 'styled-components';\r\n\r\nexport const PlayerControlsDiv = styled.div`\r\n\tmargin-top: 1rem;\r\n\twidth: 100%;\r\n\tmax-width: 25rem;\r\n`;\r\n\r\nexport const Marquee = styled.div`\r\n\theight: 2rem;\r\n\twidth: 100%;\r\n\tmax-width: 25rem;\r\n\toverflow: hidden;\r\n\tposition: relative;\r\n`;\r\n\r\nexport const MarqueeText = styled.p`\r\n\theight: 100%;\r\n\twidth: 100%;\r\n\tmargin: 0;\r\n\tpadding: 0;\r\n\tposition: absolute;\r\n\ttext-align: center;\r\n\ttransform: translateX(100%);\r\n\tanimation: scroll-left 10s linear infinite;\r\n\r\n\t@keyframes scroll-left {\r\n\t\t0% {\r\n\t\t\ttransform: translateX(100%);\r\n\t\t}\r\n\t\t100% {\r\n\t\t\ttransform: translateX(-100%);\r\n\t\t}\r\n\t}\r\n`;\r\n\r\nexport const FlexedButtons = styled.div`\r\n\tdisplay: flex;\r\n\tjustify-content: space-between;\r\n\talign-items: center;\r\n\tmax-width: 25rem;\r\n`;\r\n\r\ninterface TrackButtonProps {\r\n\treverse?: boolean;\r\n}\r\nexport const TrackButton = styled.button`\r\n\tbackground: gainsboro;\r\n\tcolor: black;\r\n\tborder: 0.15rem solid darkred;\r\n\tborder-radius: 10%;\r\n\tpadding: 0.5rem 1rem;\r\n\tfont-size: 2rem;\r\n\ttext-align: center;\r\n\ttext-decoration: none;\r\n\tdisplay: flex;\r\n\tjustify-content: center;\r\n\talign-items: center;\r\n\t${(props: TrackButtonProps) => props.reverse && `transform: scaleX(-1)`}\r\n`;","import { GiShieldBash, GiShieldReflect, GiShieldBounces } from 'react-icons/gi';\r\nimport { useMusicPlayer } from '../../utils/useMusicPlayer';\r\nimport { PlayerControlsDiv, Marquee, MarqueeText, FlexedButtons, TrackButton } from './styled';\r\n\r\nconst PlayerControls = () => {\r\n\tconst { currentTrackName, isPlaying, playNext, playPrev, togglePlay } = useMusicPlayer();\r\n\r\n\treturn (\r\n\t\t<PlayerControlsDiv>\r\n\t\t\t<Marquee>\r\n\t\t\t\t{currentTrackName && isPlaying && <MarqueeText>{currentTrackName}</MarqueeText>}\r\n\t\t\t</Marquee>\r\n\t\t\t<FlexedButtons>\r\n\t\t\t\t<TrackButton reverse onClick={() => playPrev()}>\r\n\t\t\t\t\t<GiShieldBounces />\r\n\t\t\t\t</TrackButton>\r\n\t\t\t\t<TrackButton onClick={() => togglePlay()}>\r\n\t\t\t\t\t{isPlaying ? <GiShieldReflect /> : <GiShieldBash />}\r\n\t\t\t\t</TrackButton>\r\n\t\t\t\t<TrackButton onClick={() => playNext()}>\r\n\t\t\t\t\t<GiShieldBounces />\r\n\t\t\t\t</TrackButton>\r\n\t\t\t</FlexedButtons>\r\n\t\t</PlayerControlsDiv>\r\n\t);\r\n};\r\n\r\nexport default PlayerControls;\r\n","import styled from 'styled-components';\r\n\r\nexport const TrackDiv = styled.div`\r\n\tdisplay: flex;\r\n\tjustify-content: space-between;\r\n\talign-items: center;\r\n\twidth: 100%;\r\n\tmax-width: 25rem;\r\n\tmargin-bottom: 0.25rem;\r\n`;\r\n\r\nexport const TrackButton = styled.button`\r\n\tbackground: gainsboro;\r\n\tcolor: black;\r\n\tborder: 0.15rem solid darkred;\r\n\tborder-radius: 10%;\r\n\tpadding: 0.5rem 1rem;\r\n\tfont-size: 1.75rem;\r\n\ttext-align: center;\r\n\ttext-decoration: none;\r\n\tdisplay: flex;\r\n\tjustify-content: center;\r\n\talign-items: center;\r\n`;\r\n\r\nexport const TrackName = styled.div`\r\n\tfont-size: 1.25rem;\r\n`;","import { useMusicPlayer } from '../../utils/useMusicPlayer';\r\nimport { GiShieldBash, GiShieldReflect } from 'react-icons/gi';\r\nimport { TrackDiv, TrackButton, TrackName } from './styled';\r\n\r\nconst TrackList = () => {\r\n\tconst { trackList, isPlaying, currentTrackName, playTrack } = useMusicPlayer();\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{trackList.map((track, index) => (\r\n\t\t\t\t<TrackDiv key={index}>\r\n\t\t\t\t\t<TrackButton onClick={() => playTrack(index)}>\r\n\t\t\t\t\t\t{currentTrackName === track.name && isPlaying ? (\r\n\t\t\t\t\t\t\t<GiShieldReflect />\r\n\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t<GiShieldBash />\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</TrackButton>\r\n\t\t\t\t\t<TrackName>{track.name}</TrackName>\r\n\t\t\t\t</TrackDiv>\r\n\t\t\t))}\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default TrackList;\r\n","import MusicPlayerProvider from '../../contexts/MusicPlayerContext';\r\nimport { RootLayout } from './styled';\r\nimport Header from '../Header';\r\nimport PlayerControls from '../PlayerControls';\r\nimport TrackList from '../TrackList';\r\n\r\nfunction App() {\r\n\treturn (\r\n\t\t<MusicPlayerProvider>\r\n\t\t\t<RootLayout>\r\n\t\t\t\t<Header />\r\n\t\t\t\t<TrackList />\r\n\t\t\t\t<PlayerControls />\r\n\t\t\t</RootLayout>\r\n\t\t</MusicPlayerProvider>\r\n\t);\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}